import os
from aiogram import Bot, Dispatcher, executor, types

TOKEN = os.getenv("TOKEN")
ADMIN_CHAT_ID = int(os.getenv("ADMIN_CHAT_ID", "0"))

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

CATALOG = {'item1': {'title': '–®–∏—à–∫–∏ –ê–ö-47', 'weight': '1.0–≥', 'price': '400 –∏–Ω–¥–∏, 450 —Å–∞—Ç–∏–≤–∞ –≥—Ä–Ω'}, 'item2': {'title': '–ì–∞—à–∏—à –ê–§–ì–ê–ù', 'weight': '1.0–≥', 'price': '500 –≥—Ä–Ω'}, 'item3': {'title': '–ö–∏—Ñ –ê–§–ì–ê–ù', 'weight': '1.0–≥', 'price': '600 –≥—Ä–Ω'}, 'item4': {'title': '–ê–º—Ñ–µ—Ç–∞–º–∏–Ω VHQ', 'weight': '1.0–≥', 'price': '700 –≥—Ä–Ω'}, 'item5': {'title': '–ú–µ—Ñ–µ–¥—Ä–æ–Ω VHQ', 'weight': '1.0–≥', 'price': '700 –≥—Ä–Ω'}, 'item6': {'title': '–ú–µ—Ç–∞–¥–æ–Ω –£–ª–∏—á–Ω—ã–π', 'weight': '1.0–≥', 'price': '800 –≥—Ä–Ω'}, 'item7': {'title': '–≠–∫—Å—Ç–∞–∑–∏ –î–æ–º–∏–Ω–æ', 'weight': '1 —à—Ç', 'price': '450 –≥—Ä–Ω'}, 'item8': {'title': '–ì—Ä–∏–±—ã', 'weight': '1.0–≥', 'price': '450 –≥—Ä–Ω'}, 'item9': {'title': '–õ–°–î-300', 'weight': '1 —à—Ç.', 'price': '500 –≥—Ä–Ω'}, 'item10': {'title': '–ú–î–ú–ê', 'weight': '1.0–≥', 'price': '500 –≥—Ä–Ω'}, 'item11': {'title': 'Alfa pvp', 'weight': '1.0–≥', 'price': '600 –≥—Ä–Ω'}, 'item12': {'title': '–ì–µ—Ä', 'weight': '0.5–≥', 'price': '900 –≥—Ä–Ω'}, 'item13': {'title': '–í–∏–Ω—Ç', 'weight': '5–º–≥', 'price': '1200 –≥—Ä–Ω'}, 'item14': {'title': '–ú—É—à—Ä—É–º', 'weight': '1—à—Ç', 'price': '450 –≥—Ä–Ω'}, 'item15': {'title': '–ö–µ—Ç–∞–º–∏–Ω', 'weight': '1.0–≥', 'price': '500 –≥—Ä–Ω'}, 'item16': {'title': 'D-mesth', 'weight': '0.25–≥', 'price': '600 –≥—Ä–Ω'}, 'item17': {'title': '–ö–æ–∫–∞—ó–Ω', 'weight': '0.25–≥', 'price': '1000 –≥—Ä–Ω'}}

@dp.message_handler(commands=["start", "menu"])
async def start(message: types.Message):
    kb = types.InlineKeyboardMarkup()
    for key, item in CATALOG.items():
        kb.add(types.InlineKeyboardButton(f"{item['title']} | {item['weight']} | {item['price']}", callback_data=f"buy:{key}"))
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data.startswith("buy:"))
async def buy(call: types.CallbackQuery):
    item_id = call.data.split(":")[1]
    item = CATALOG[item_id]
    text = (
        f"üõí –í—ã –≤—ã–±—Ä–∞–ª–∏: {item['title']}\n"
        f"‚öñ –í–µ—Å: {item['weight']}\n"
        f"üí∞ –¶–µ–Ω–∞: {item['price']}\n\n"
        "–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–∞—Ä—Ç—É:\n\n"
        "`5355 2800 2484 3821`\n"
        "–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤\n\n"
        "üìå –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à @username\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ —Å—é–¥–∞."
    )
    await call.message.answer(text, parse_mode="Markdown")
    if ADMIN_CHAT_ID:
        await bot.send_message(ADMIN_CHAT_ID, f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑: {call.from_user.id} –≤—ã–±—Ä–∞–ª {item['title']} ({item['weight']}, {item['price']})")
    await call.answer()

@dp.message_handler(content_types=["photo"])
async def receive_check(message: types.Message):
    if ADMIN_CHAT_ID:
        await bot.send_message(ADMIN_CHAT_ID, f"–ß–µ–∫ –æ—Ç {message.from_user.id}")
        await message.forward(ADMIN_CHAT_ID)
    await message.reply("‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –æ–ø–ª–∞—Ç—É –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
